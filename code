from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import PassiveAggressiveClassifier
from sklearn.metrics import accuracy_score, confusion_matrix
import pandas as pd

# Load dataset
df = pd.read_csv('news.csv')  # Ensure it has 'text' and 'label' columns

# Split labels and features
x_train, x_test, y_train, y_test = train_test_split(df['text'], df['label'], test_size=0.2)

# Vectorize text data
vectorizer = TfidfVectorizer(stop_words='english', max_df=0.7)
x_train_vec = vectorizer.fit_transform(x_train)
x_test_vec = vectorizer.transform(x_test)

# Train model
model = PassiveAggressiveClassifier()
model.fit(x_train_vec, y_train)

# Evaluate
y_pred = model.predict(x_test_vec)
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))

 # Custom testing input
test_news = ["The government has officially declared that aliens have arrived on Earth."]  # Example fake news

# Preprocess and vectorize
test_vec = vectorizer.transform(test_news)

# Predict and display result
prediction = model.predict(test_vec)
print("Prediction:", "Real" if prediction[0] == 'REAL' else "Fake")
